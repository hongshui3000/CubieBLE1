; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave --gnu -o.\objects\soc_patch.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\soc_patch.d --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 --preinclude=autoconf_app.h -I..\..\..\..\include -I..\..\..\..\arch -I..\..\..\..\include\arch\arm -I..\..\..\..\include\zephyr -I..\..\..\..\include\net -I..\..\..\..\include\shell -I..\..\..\..\include\drivers -I..\..\..\..\kernel\include -I..\..\..\..\arch\soc\atb110x -I..\..\..\..\include\arch\arm\cortex_m\cmsis\Include -I..\..\..\..\lib\libc\minimal\include -I..\..\..\..\include\generated -I..\..\..\..\boards -I..\src\include -I..\..\..\..\subsys\bluetooth -I..\..\..\..\subsys\bluetooth\host -I..\src\profile -I..\..\gatt -I..\..\..\..\subsys\bluetooth\common -I.\RTE\_flash -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.2.0\Device\ARM\ARMCM0\Include -IF:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=524 -DARMCM0 --omf_browse=.\objects\soc_patch.crf ..\..\..\..\arch\soc\atb110x\soc_patch.c]
                          THUMB

                          AREA ||.init.once.text."..\\..\\..\\..\\arch\\soc\\atb110x\\soc_patch.c".0||, CODE, READONLY, ALIGN=2

                  patch_hw_func PROC
;;;19     
;;;20     __init_once_text void patch_hw_func(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;21     {
;;;22     	struct function_patch_t *__patch_start, *__patch_end, *tmp;
;;;23     	int i, function_patch_num;
;;;24     
;;;25     	__patch_start = (struct function_patch_t *)Image$$RW_IRAM_PATCH_HW_FUNC$$Base;
000002  4913              LDR      r1,|L1.80|
;;;26     	__patch_end = (struct function_patch_t *)Image$$RW_IRAM_PATCH_HW_FUNC$$Limit;
000004  4813              LDR      r0,|L1.84|
;;;27     	function_patch_num = ((u32_t)__patch_end - (u32_t)__patch_start) / sizeof(struct function_patch_t);
;;;28     
;;;29     	for (i = 0, tmp = __patch_start; i < function_patch_num; i++, tmp++) {
;;;30     		FUNREPLACE->func[i] = ((u32_t)tmp->new_function) & (~1);
000006  4e14              LDR      r6,|L1.88|
000008  1a40              SUBS     r0,r0,r1              ;27
00000a  08c5              LSRS     r5,r0,#3              ;27
00000c  2000              MOVS     r0,#0                 ;29
00000e  3640              ADDS     r6,r6,#0x40
;;;31     		FUNREPLACE->FIXADDR[i] = ((u32_t)tmp->old_function) & (~1);
;;;32     		FUNREPLACE->CTL |= (0x1<<i);
000010  4c11              LDR      r4,|L1.88|
000012  2701              MOVS     r7,#1
000014  e010              B        |L1.56|
                  |L1.22|
000016  680a              LDR      r2,[r1,#0]            ;30
000018  0853              LSRS     r3,r2,#1              ;30
00001a  005b              LSLS     r3,r3,#1              ;30
00001c  0082              LSLS     r2,r0,#2              ;30
00001e  1992              ADDS     r2,r2,r6              ;30
000020  6013              STR      r3,[r2,#0]            ;30
000022  684b              LDR      r3,[r1,#4]            ;31
000024  085b              LSRS     r3,r3,#1              ;31
000026  005b              LSLS     r3,r3,#1              ;31
000028  6313              STR      r3,[r2,#0x30]         ;31
00002a  6b23              LDR      r3,[r4,#0x30]
00002c  463a              MOV      r2,r7
00002e  4082              LSLS     r2,r2,r0
000030  4313              ORRS     r3,r3,r2
000032  6323              STR      r3,[r4,#0x30]
000034  1c40              ADDS     r0,r0,#1
000036  3108              ADDS     r1,r1,#8
                  |L1.56|
000038  42a8              CMP      r0,r5                 ;29
00003a  dbec              BLT      |L1.22|
;;;33     	}
;;;34     	SYS_LOG_INF("CTL:0x%x", FUNREPLACE->CTL);
00003c  a007              ADR      r0,|L1.92|
00003e  9000              STR      r0,[sp,#0]
000040  6b23              LDR      r3,[r4,#0x30]
000042  a206              ADR      r2,|L1.92|
000044  a106              ADR      r1,|L1.96|
000046  a008              ADR      r0,|L1.104|
000048  f7fffffe          BL       printk
;;;35     }
00004c  bdf8              POP      {r3-r7,pc}
;;;36     
                          ENDP

00004e  0000              DCW      0x0000
                  |L1.80|
                          DCD      ||Image$$RW_IRAM_PATCH_HW_FUNC$$Base||
                  |L1.84|
                          DCD      ||Image$$RW_IRAM_PATCH_HW_FUNC$$Limit||
                  |L1.88|
                          DCD      0x40009040
                  |L1.92|
00005c  00                DCB      0
00005d  00                DCB      0
00005e  00                DCB      0
00005f  00                DCB      0
                  |L1.96|
000060  70617463          DCB      "patch",0
000064  6800    
000066  00                DCB      0
000067  00                DCB      0
                  |L1.104|
000068  5b25735d          DCB      "[%s] %sCTL:0x%x%s\n",0
00006c  20257343
000070  544c3a30
000074  78257825
000078  730a00  
00007b  00                DCB      0

                          AREA ||.init.once.text."..\\..\\..\\..\\arch\\soc\\atb110x\\soc_patch.c".1||, CODE, READONLY, ALIGN=2

                  patch_hw_code PROC
;;;48     
;;;49     __init_once_text void patch_hw_code(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;50     {
;;;51     	struct code_patch_t *__patch_start, *__patch_end, *tmp;
;;;52     	int i, code_patch_num;
;;;53     
;;;54     	__patch_start = (struct code_patch_t *)Image$$RW_IRAM_PATCH_HW_CODE$$Base;
000002  4910              LDR      r1,|L2.68|
;;;55     	__patch_end = (struct code_patch_t *)Image$$RW_IRAM_PATCH_HW_CODE$$Limit;
000004  4810              LDR      r0,|L2.72|
;;;56     	code_patch_num = ((u32_t)__patch_end - (u32_t)__patch_start) / sizeof(struct code_patch_t);
;;;57     
;;;58     	for (i = 0, tmp = __patch_start; i < code_patch_num; i++, tmp++) {
;;;59     		CODEREPLACE->Instr[i] = (u32_t)tmp->new_code;
000006  4b11              LDR      r3,|L2.76|
000008  1a40              SUBS     r0,r0,r1              ;56
00000a  08c5              LSRS     r5,r0,#3              ;56
00000c  2000              MOVS     r0,#0                 ;58
;;;60     		CODEREPLACE->FIXADDR[i] = (u32_t)tmp->old_code_addr;
;;;61     		CODEREPLACE->CTL |= (0x1<<i);
00000e  2601              MOVS     r6,#1
000010  e00c              B        |L2.44|
                  |L2.18|
000012  0082              LSLS     r2,r0,#2              ;59
000014  18d2              ADDS     r2,r2,r3              ;59
000016  680c              LDR      r4,[r1,#0]            ;59
000018  6114              STR      r4,[r2,#0x10]         ;59
00001a  684c              LDR      r4,[r1,#4]            ;60
00001c  6414              STR      r4,[r2,#0x40]         ;60
00001e  68dc              LDR      r4,[r3,#0xc]
000020  4632              MOV      r2,r6
000022  4082              LSLS     r2,r2,r0
000024  4314              ORRS     r4,r4,r2
000026  60dc              STR      r4,[r3,#0xc]
000028  1c40              ADDS     r0,r0,#1
00002a  3108              ADDS     r1,r1,#8
                  |L2.44|
00002c  42a8              CMP      r0,r5                 ;58
00002e  dbf0              BLT      |L2.18|
;;;62     	}
;;;63     	SYS_LOG_INF("CTL:0x%x", CODEREPLACE->CTL);
000030  a007              ADR      r0,|L2.80|
000032  9000              STR      r0,[sp,#0]
000034  68db              LDR      r3,[r3,#0xc]
000036  a206              ADR      r2,|L2.80|
000038  a106              ADR      r1,|L2.84|
00003a  a008              ADR      r0,|L2.92|
00003c  f7fffffe          BL       printk
;;;64     }
000040  bdf8              POP      {r3-r7,pc}
;;;65     
                          ENDP

000042  0000              DCW      0x0000
                  |L2.68|
                          DCD      ||Image$$RW_IRAM_PATCH_HW_CODE$$Base||
                  |L2.72|
                          DCD      ||Image$$RW_IRAM_PATCH_HW_CODE$$Limit||
                  |L2.76|
                          DCD      0x40009000
                  |L2.80|
000050  00                DCB      0
000051  00                DCB      0
000052  00                DCB      0
000053  00                DCB      0
                  |L2.84|
000054  70617463          DCB      "patch",0
000058  6800    
00005a  00                DCB      0
00005b  00                DCB      0
                  |L2.92|
00005c  5b25735d          DCB      "[%s] %sCTL:0x%x%s\n",0
000060  20257343
000064  544c3a30
000068  78257825
00006c  730a00  
00006f  00                DCB      0

                          AREA ||.init.once.text."..\\..\\..\\..\\arch\\soc\\atb110x\\soc_patch.c".2||, CODE, READONLY, ALIGN=1

                  patch_sw PROC
;;;66     extern void patch_sys_soc_suspend(void);
;;;67     __init_once_text void patch_sw(void)
000000  4770              BX       lr
;;;68     {
;;;69     #if CONFIG_DEEPSLEEP
;;;70     	patch_sys_soc_suspend();
;;;71     #endif
;;;72     }
                          ENDP


                          AREA ||i.dump_hw_func||, CODE, READONLY, ALIGN=2

                  dump_hw_func PROC
;;;36     
;;;37     void dump_hw_func(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;38     {
;;;39     	int i;
;;;40     
;;;41     	for (i = 0; i < 12; i++) {
;;;42     		SYS_LOG_INF("FUNREPLACE[%d]:", i);
;;;43     		SYS_LOG_INF("FIXADDR:0x%x, ", FUNREPLACE->FIXADDR[i]);
000002  4e15              LDR      r6,|L4.88|
000004  2400              MOVS     r4,#0                 ;41
                  |L4.6|
000006  a015              ADR      r0,|L4.92|
000008  9000              STR      r0,[sp,#0]            ;42
00000a  4623              MOV      r3,r4                 ;42
00000c  a213              ADR      r2,|L4.92|
00000e  a114              ADR      r1,|L4.96|
000010  a015              ADR      r0,|L4.104|
000012  f7fffffe          BL       printk
000016  a011              ADR      r0,|L4.92|
000018  9000              STR      r0,[sp,#0]
00001a  00a0              LSLS     r0,r4,#2
00001c  1985              ADDS     r5,r0,r6
00001e  6b2b              LDR      r3,[r5,#0x30]
000020  a20e              ADR      r2,|L4.92|
000022  a10f              ADR      r1,|L4.96|
000024  a017              ADR      r0,|L4.132|
000026  f7fffffe          BL       printk
;;;44     		SYS_LOG_INF("func:0x%x", FUNREPLACE->func[i]);
00002a  a00c              ADR      r0,|L4.92|
00002c  9000              STR      r0,[sp,#0]
00002e  682b              LDR      r3,[r5,#0]
000030  a20a              ADR      r2,|L4.92|
000032  a10b              ADR      r1,|L4.96|
000034  a01a              ADR      r0,|L4.160|
000036  f7fffffe          BL       printk
00003a  1c64              ADDS     r4,r4,#1
00003c  2c0c              CMP      r4,#0xc               ;41
00003e  dbe2              BLT      |L4.6|
;;;45     	}
;;;46     	SYS_LOG_INF("CTL:0x%x", FUNREPLACE->CTL);
000040  a006              ADR      r0,|L4.92|
000042  9000              STR      r0,[sp,#0]
000044  4804              LDR      r0,|L4.88|
000046  3840              SUBS     r0,r0,#0x40
000048  6b03              LDR      r3,[r0,#0x30]
00004a  a204              ADR      r2,|L4.92|
00004c  a104              ADR      r1,|L4.96|
00004e  a019              ADR      r0,|L4.180|
000050  f7fffffe          BL       printk
;;;47     }
000054  bdf8              POP      {r3-r7,pc}
;;;48     
                          ENDP

000056  0000              DCW      0x0000
                  |L4.88|
                          DCD      0x40009080
                  |L4.92|
00005c  00                DCB      0
00005d  00                DCB      0
00005e  00                DCB      0
00005f  00                DCB      0
                  |L4.96|
000060  70617463          DCB      "patch",0
000064  6800    
000066  00                DCB      0
000067  00                DCB      0
                  |L4.104|
000068  5b25735d          DCB      "[%s] %sFUNREPLACE[%d]:%s\n",0
00006c  20257346
000070  554e5245
000074  504c4143
000078  455b2564
00007c  5d3a2573
000080  0a00    
000082  00                DCB      0
000083  00                DCB      0
                  |L4.132|
000084  5b25735d          DCB      "[%s] %sFIXADDR:0x%x, %s\n",0
000088  20257346
00008c  49584144
000090  44523a30
000094  7825782c
000098  2025730a
00009c  00      
00009d  00                DCB      0
00009e  00                DCB      0
00009f  00                DCB      0
                  |L4.160|
0000a0  5b25735d          DCB      "[%s] %sfunc:0x%x%s\n",0
0000a4  20257366
0000a8  756e633a
0000ac  30782578
0000b0  25730a00
                  |L4.180|
0000b4  5b25735d          DCB      "[%s] %sCTL:0x%x%s\n",0
0000b8  20257343
0000bc  544c3a30
0000c0  78257825
0000c4  730a00  
0000c7  00                DCB      0
